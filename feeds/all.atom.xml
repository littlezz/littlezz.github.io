<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>littlezz's Blog</title><link href="http://littlezz.github.io/" rel="alternate"></link><link href="http://littlezz.github.io/feeds/all.atom.xml" rel="self"></link><id>http://littlezz.github.io/</id><updated>2016-04-21T00:00:00+08:00</updated><entry><title>日本动画人展览会总结与推荐</title><link href="http://littlezz.github.io/ri-ben-dong-hua-ren-zhan-lan-hui-zong-jie-yu-tui-jian.html" rel="alternate"></link><updated>2016-04-21T00:00:00+08:00</updated><author><name>littlezz</name></author><id>tag:littlezz.github.io,2016-04-21:ri-ben-dong-hua-ren-zhan-lan-hui-zong-jie-yu-tui-jian.html</id><summary type="html">&lt;p&gt;首先， 不得不提关于这个展览会的纪录片 《庵野先生与我们的莽撞挑战 日本动画人展览会》  &lt;/p&gt;
&lt;p&gt;5分钟的动画， 制作时间往往是好几个月， 途中经历的种种困难， 特别是对于新人监督， 经验不足，在现场时的时候很难控制场面。比如第32话的监督， 在配音时说希望林原惠用更成熟一点的语气， 结果林原惠反问『请问监督眼中的成熟是什么呢？ 我没有从人物的脸上看到成熟的气质。』。 然后监督直接吓懵逼，一个工作人员默默递给监督一个红绿按钮的选择键盘，全场没有人敢讲话， 只有监督不断翻着台本的声音。   最后还是林原惠救场， 说在刚才的基础上用更低沉的语气。 监督说很好， 这样就好。 &lt;/p&gt;
&lt;p&gt;旁白一针见血的说『现在监督一点很后悔吧』。&lt;br /&gt;
但是很多问题最后可能只能妥协。&lt;br /&gt;
学会妥协也是成为优秀监督的必要能力。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;好了， 开始记录那些我喜欢的作品吧。&lt;br /&gt;
基于看过纪录片的原因， 我先说32话， 之后的按顺序。  &lt;/p&gt;
&lt;h3 id="32"&gt;&lt;a name="user-content-32" href="#32" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;32 新世紀いんぱくつ。&lt;/h3&gt;
&lt;p&gt;和eva是同一个时间观的， 我特别去看了之前监督和林原惠意见冲突的地方， 讲道理， 其实还是林原惠说得对。。。&lt;del&gt;那张脸上面看不出所谓的成熟&lt;/del&gt;&lt;br /&gt;
然后歌很好听， 非常好听， 背景也非常美，再配上百合， 百合！百合！我吼兴奋啊啊啊啊啊啊啊啊啊啊wwww， 可以循环看好多遍。 &lt;br /&gt;
&lt;del&gt;我的偶像不可能变成橙汁&lt;/del&gt;  &lt;/p&gt;
&lt;h3 id="1"&gt;&lt;a name="user-content-1" href="#1" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;1 龍の歯医者&lt;/h3&gt;
&lt;p&gt;恢弘大作的感觉， 嗯， BGM也很恢弘， 作画也很酷炫。  &lt;/p&gt;
&lt;h3 id="2-hill-climb-girl"&gt;&lt;a name="user-content-2-hill-climb-girl" href="#2-hill-climb-girl" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;2 HILL CLIMB GIRL&lt;/h3&gt;
&lt;p&gt;感觉上是秀3D技术的， 然而我觉得里面的歌曲很好听。  &lt;/p&gt;
&lt;h3 id="3-mememe"&gt;&lt;a name="user-content-3-mememe" href="#3-mememe" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;3 ME!ME!ME!&lt;/h3&gt;
&lt;p&gt;这个不用说了， 很多人说神作啦， 和EVA说的是一个事情啦， 更加容易懂啦， 实用啦。 各种各样。&lt;br /&gt;
想要补充的就是其实庵野是没有参与进来的。。。&lt;br /&gt;
蛮好看的， 值得一看。 卖肉新高度。而且很带感。有很多符号元素。 总之看得开心就是好的。 &lt;/p&gt;
&lt;h3 id="4-carnage"&gt;&lt;a name="user-content-4-carnage" href="#4-carnage" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;4 Carnage&lt;/h3&gt;
&lt;p&gt;和上一个作品形成鲜明的对比。 &lt;br /&gt;
这部作品非常有表现力。&lt;br /&gt;
《ME!ME!ME!》 的主题是美少女， 而这部作品的主题是表现故事， 人物和剧情， 都只是表现的手段而已。 当然很多人可能会说『这画风我不喜欢』。 然后结束观看， 然后接着对mememe撸。  &lt;/p&gt;
&lt;p&gt;可是我tm真的好喜欢！&lt;br /&gt;
那帅到炸裂的分镜， 没有矫揉造作的卖萌，一股浓浓的黑暗风格。 干净利落， 没有多余的台词， 关键的剧情全部用镜头来表达。  &lt;/p&gt;
&lt;p&gt;这他妈就是艺术品啊。  &lt;/p&gt;
&lt;p&gt;《ME!ME!ME!》确实取得了很高的人气， 如果是真的变成作品放送的话， 多半情况下也是ME!ME!ME!》热卖， 而本作暴死。  &lt;/p&gt;
&lt;p&gt;但是总得有人做像《Carnage》这样的动画， 这种东西才称得上是所谓的『动画未来』。 其他的像《mememe》这种模式，商业运作成功， 无可厚非， 毕竟卖bd卖人设，赚了钱活下去才是王道。 但是如果一辈子都干这种事情，而且还时不时披上一个『内涵作』这样的外衣的话，我觉得真的是有点的恶心。  &lt;/p&gt;
&lt;h3 id="6-202ldk2"&gt;&lt;a name="user-content-6-202ldk2" href="#6-202ldk2" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;6 西荻窪駅徒歩20分2LDK敷礼2ヶ月ペット不可&lt;/h3&gt;
&lt;p&gt;和第四话一样， 剧情非常有趣， 动作非常非常的流畅， 非常推荐。  这部作品在纪录片里面有提到。  &lt;/p&gt;
&lt;h3 id="10"&gt;&lt;a name="user-content-10" href="#10" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;10 ヤマデロイド&lt;/h3&gt;
&lt;p&gt;这个也很好看， 配合一首歌曲讲了一个故事， 节奏非常带感， 而且没有对白， 全部用镜头语言来讲故事， 比现在的一些动画恨不得配角24小时全程解说不知道要高到哪里去。  &lt;/p&gt;
&lt;p&gt;但是有一点， 这个人脸的画风， 23333 不行， 我一开始以为是要全程颜艺， 但是看旧了好像还是蛮带感的。  &lt;/p&gt;
&lt;p&gt;总之很推荐， 剧情也很有爱。  &lt;/p&gt;
&lt;h3 id="11-power-plant-no33"&gt;&lt;a name="user-content-11-power-plant-no33" href="#11-power-plant-no33" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;11 POWER PLANT No.33&lt;/h3&gt;
&lt;p&gt;Trigger， 今石洋之办的那家工作室。&lt;br /&gt;
科幻类的，没什么要说的， 值得一看。 ed很好听。  &lt;/p&gt;
&lt;h3 id="12-evangelion-another-impactconfidential"&gt;&lt;a name="user-content-12-evangelion-another-impactconfidential" href="#12-evangelion-another-impactconfidential" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;12 [evangelion： Another Impact（Confidential）&lt;/h3&gt;
&lt;p&gt;卧槽， 说老实话， 我光看画面我真的分不清到底是3D的还是特摄片。  &lt;/p&gt;
&lt;p&gt;怕了。  &lt;/p&gt;
&lt;h3 id="13-kanon"&gt;&lt;a name="user-content-13-kanon" href="#13-kanon" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;13 Kanón&lt;/h3&gt;
&lt;p&gt;和其他的不同， 这部全程在说话， 应该是讨论一些东西， 可能是讨论作品和观众的问题吧。&lt;br /&gt;
看得下去的话可以一看。  &lt;/p&gt;
&lt;h3 id="14-sexviolence-with-machspeed"&gt;&lt;a name="user-content-14-sexviolence-with-machspeed" href="#14-sexviolence-with-machspeed" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;14 Sex&amp;amp;VIOLENCE with MACHSPEED&lt;/h3&gt;
&lt;p&gt;我是看完这部才想着搞一个总结的。&lt;br /&gt;
我最近遇上一些讨厌的事情， 没有什么道理可以讲， 对面只会不断的追问『你为什么』 和『你凭什么』。 就像这部作品所表达的东西一样： 没有为什么， 我tm就是要为之一战。&lt;/p&gt;
&lt;p&gt;这可能是现在无可奈何的我内心深处非常羡慕敢想而不敢讲的东西吧。  &lt;/p&gt;
&lt;p&gt;2016年04月21日21:41:15   &lt;/p&gt;
&lt;h3 id="15"&gt;&lt;a name="user-content-15" href="#15" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;15 おばけちゃん&lt;/h3&gt;
&lt;p&gt;2333&lt;br /&gt;
好有趣， 前面都是一点蠢萌蠢萌的片段，全都是neta， 但是如果坚持到最后， 会有好的收获的。  &lt;/p&gt;
&lt;p&gt;而且， ed是重点， 最后出现了鹤卷和哉！&lt;/p&gt;
&lt;h3 id="16"&gt;&lt;a name="user-content-16" href="#16" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;16&lt;/h3&gt;
&lt;p&gt;这什么鬼。。。&lt;br /&gt;
剧情一头雾水， 然后各种风格的混搭， 设定的不明。&lt;br /&gt;
总之我觉得不好看。&lt;/p&gt;
&lt;h3 id="17"&gt;&lt;a name="user-content-17" href="#17" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;17 三本の証言者&lt;/h3&gt;
&lt;p&gt;卧槽， 居然是剧情片， 短篇+剧情=很难看懂。&lt;br /&gt;
不过还是值得一看的。  &lt;/p&gt;
&lt;h3 id="19-i-can-friday-by-day"&gt;&lt;a name="user-content-19-i-can-friday-by-day" href="#19-i-can-friday-by-day" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;19 I can Friday by day!&lt;/h3&gt;
&lt;p&gt;卧槽！！！&lt;br /&gt;
我就是在找这个啊，  监督是 &lt;strong&gt;鹤卷和哉&lt;/strong&gt; !重复一遍， 监督是鹤卷和哉！ &lt;/p&gt;
&lt;p&gt;别废话了， 抓紧看吧， 和flcl一样的感觉， 猜不到开头， 更加猜不到结尾。&lt;/p&gt;
&lt;p&gt;2016年04月22日03:20:30&lt;/p&gt;</summary><category term="日记"></category><category term="瞎扯"></category></entry><entry><title>关于《我不在的街道》评分的一点思考</title><link href="http://littlezz.github.io/guan-yu-wo-bu-zai-de-jie-dao-ping-fen-de-yi-dian-si-kao.html" rel="alternate"></link><updated>2016-04-04T00:00:00+08:00</updated><author><name>littlezz</name></author><id>tag:littlezz.github.io,2016-04-04:guan-yu-wo-bu-zai-de-jie-dao-ping-fen-de-yi-dian-si-kao.html</id><summary type="html">&lt;p&gt;我给了9分（神作）  &lt;/p&gt;
&lt;p&gt;刚看完的时候， 对于那个操蛋的结尾， 我也是想打七分的， 但是觉得实在太低， 对不起那个惊艳的开头， 于是给八分。  &lt;/p&gt;
&lt;p&gt;过了1天， 我连续半话弃掉了3部番， 其中包括《fate stay night UBW》， 我在群里面说， 『不行， 刚看完扑街， 其他番根本没有办法看， 全部半话弃』&lt;br /&gt;
直到此刻， 我才明白， 有多少番， 我甚至没有办法看完第一话， 更不用说考虑什么剧情了。  &lt;/p&gt;
&lt;p&gt;我开始察觉到自己， 以及大部分人的可笑。&lt;br /&gt;
一副严肃认真， 公平正义的态度， 打上一个完全主观的分数， 留下一句似是而非的自己评分准则。&lt;br /&gt;
俨然一副资深人士的样子。  &lt;/p&gt;
&lt;p&gt;然而来来回回， 不还是局限在剧情方面？&lt;br /&gt;
一部动画， 构图， 分镜， 配音， 上色， 配乐等等， 这么多元素在里面， 最后大家却振振有词的依据剧情来打分， 还能说得头头是道。  &lt;/p&gt;
&lt;p&gt;我才明白当时的我也是如此， 也就是在那时， 我才会想起我起初看这个动画的时候的兴奋之情， 我大呼卧槽， 我呼啦一下打开房间的门， 我走到从来不看番的室友的房间， 我说， 卧槽， 我要通宵看完这部番了， 我已经有几年没有这种想要通宵看番的冲动了， 上一次这样还是高中， 看得是石头门。&lt;br /&gt;
我在一集结束的时候， 高呼悠木碧， 棒啊啊啊啊。 我说， fuck them all！ 到后面， 我室友都跑过来我们两个熬夜看番了。  &lt;/p&gt;
&lt;p&gt;也就是那时， 我才会想起， 有多少回， 我被里面的一幕触动到， 我说， 就凭此刻， 足以封神。   &lt;/p&gt;
&lt;p&gt;所以我改成了9分， 为了我当初的承诺， 为了第二话那句『原来我也有过这样的时间啊』， 为了在记录那时感想时触动的回忆让我流着泪写完观后感。  &lt;/p&gt;
&lt;p&gt;如果此刻我还保持着一副正人君子， 道貌岸然， 满口胡言的扯着剧情的『公平之人』， 那我就是一个双料的傻瓜。  &lt;/p&gt;
&lt;p&gt;干他娘的， 我就是要给9分， 有傻逼打低分， 为什么我就不能打高分？  &lt;/p&gt;
&lt;p&gt;说到底， 为什么作品的排名会被高低分这种东西牵制。 或者说如何排除傻逼对一个作品的影响。  &lt;/p&gt;
&lt;p&gt;投票者投票表决天才， 但是有一个前提是， 如何保证投票者本身不是平庸之流。  &lt;/p&gt;
&lt;p&gt;抛开知乎这种社交性质的网站不谈， 如果是这种个人评分性质，带有很重的个人主观口味性质的，但是最后却是统计平均数的网站来看。 应该首先匹配评分者中和当前用户匹配率高的用户， 重新分配权重。  &lt;/p&gt;
&lt;p&gt;咦， 这不就是协同过滤么。。。  &lt;/p&gt;
&lt;p&gt;说来， 要先解决计算用户之间的距离的问题， 然后重新分配权重， 然后重新得到分数， 卧槽， 简单啊。  &lt;/p&gt;
&lt;p&gt;我是不是可以去写一个啊。。。？  &lt;/p&gt;
&lt;p&gt;看情况， 先把之前的坑给填了先。  &lt;/p&gt;
&lt;p&gt;2016年04月04日19:37:51&lt;/p&gt;</summary><category term="日记"></category><category term="瞎扯"></category><category term="小结"></category></entry><entry><title>Travis CI with Numpy and Pytest</title><link href="http://littlezz.github.io/travis-ci-with-numpy-and-pytest.html" rel="alternate"></link><updated>2016-03-31T00:00:00+08:00</updated><author><name>littlezz</name></author><id>tag:littlezz.github.io,2016-03-31:travis-ci-with-numpy-and-pytest.html</id><summary type="html">&lt;p&gt;It takes long time to install scientific python package by &lt;code&gt;pip&lt;/code&gt; in travis and sometime fail.  &lt;/p&gt;
&lt;p&gt;The solve is to use conda to install binary package. &lt;br /&gt;
&lt;a href="http://conda.pydata.org/docs/travis.html"&gt;http://conda.pydata.org/docs/travis.html&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Note that some package not in conda, you can use &lt;code&gt;pip&lt;/code&gt; install it, for example, &lt;code&gt;py.test&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Here is my &lt;a href="https://github.com/littlezz/ESL-Model"&gt;ESL-Model&lt;/a&gt; .trais.yml, you can view on github &lt;a href="https://github.com/littlezz/ESL-Model/blob/master/.travis.yml"&gt;https://github.com/littlezz/ESL-Model/blob/master/.travis.yml&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;language: python
python:
  &lt;span class="c1"&gt;# We don&amp;#39;t actually use the Travis Python, but this keeps it organized.&lt;/span&gt;
  - &lt;span class="s2"&gt;&amp;quot;3.5&amp;quot;&lt;/span&gt;

install:
  - sudo apt-get update
  &lt;span class="c1"&gt;# We do this conditionally because it saves us some downloading if the&lt;/span&gt;
  &lt;span class="c1"&gt;# version is the same.&lt;/span&gt;
  - &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$TRAVIS_PYTHON_VERSION&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2.7&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
      wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
  - bash miniconda.sh -b -p &lt;span class="nv"&gt;$HOME&lt;/span&gt;/miniconda
  - &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/miniconda/bin:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
  - &lt;span class="nb"&gt;hash&lt;/span&gt; -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  &lt;span class="c1"&gt;# Useful for debugging any issues with conda&lt;/span&gt;
  - conda info -a

  - conda create -q -n test-environment &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$TRAVIS_PYTHON_VERSION&lt;/span&gt; pandas numpy scipy scikit-learn
  - &lt;span class="nb"&gt;source&lt;/span&gt; activate test-environment
  - python setup.py install
  - pip install pytest

script:
  - py.test


notifications:
  email:
    on_success: never
    on_failure: always
&lt;/pre&gt;&lt;/div&gt;
&lt;br /&gt;
Note that you should install pytest manually instead use pre-install one.&lt;/p&gt;
&lt;p&gt;However, you can not use tox with conda direct, try ctox &lt;a href="https://github.com/hayd/ctox"&gt;https://github.com/hayd/ctox&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;2016-03-31 16:19:38&lt;/p&gt;</summary><category term="python"></category><category term="numpy"></category><category term="小结"></category></entry><entry><title>How to Write Reduced Rank Linear Discriminant Analysis with Python</title><link href="http://littlezz.github.io/how-to-write-reduced-rank-linear-discriminant-analysis-with-python.html" rel="alternate"></link><updated>2016-03-26T00:00:00+08:00</updated><author><name>littlezz</name></author><id>tag:littlezz.github.io,2016-03-26:how-to-write-reduced-rank-linear-discriminant-analysis-with-python.html</id><summary type="html">&lt;h2 id="intro"&gt;&lt;a name="user-content-intro" href="#intro" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;Intro&lt;/h2&gt;
&lt;p&gt;I'm working on a project named &lt;a href="https://github.com/littlezz/ESL-Model"&gt;ESL-Model&lt;/a&gt; which I want to use python to implent algorithm from The Elements of Statistical Learning. I start writing RRLDA the day before yesterday,  and I sccuessfully finish until today.  &lt;/p&gt;
&lt;p&gt;Notice that I am using Python3.5, which allow me use &lt;code&gt;@&lt;/code&gt; instead of &lt;code&gt;np.dot&lt;/code&gt;  &lt;/p&gt;
&lt;h2 id="the-difference-between-numpy-and-r"&gt;&lt;a name="user-content-the-difference-between-numpy-and-r" href="#the-difference-between-numpy-and-r" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;The difference between Numpy and R&lt;/h2&gt;
&lt;p&gt;Firstly, Numpy is slight different with R in eigen decomposition(I spent lots of time to find out T_T).  &lt;/p&gt;
&lt;p&gt;In R, the eigenvalues return from &lt;code&gt;eigen&lt;/code&gt; is descending, which is all notes assume.&lt;br /&gt;
But Numpy &lt;code&gt;np.linalg.eigh&lt;/code&gt; return eigenvalues in ascending order.  &lt;/p&gt;
&lt;p&gt;It is doesn't matter when you work on LDA, because it use both &lt;span class="math"&gt;\(V\)&lt;/span&gt; and &lt;span class="math"&gt;\(D\)&lt;/span&gt;, but it influence the result in Reduced rank LDA which you use column of &lt;span class="math"&gt;\(V\)&lt;/span&gt; alone.  &lt;/p&gt;
&lt;p&gt;To slove this problem, you may use &lt;code&gt;np.fliplr&lt;/code&gt;.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt; &lt;span class="mf"&gt;0.9967&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mf"&gt;0.002&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
       &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;0.002&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mf"&gt;1.0263&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;

&lt;span class="n"&gt;Dw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Uw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linalg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eigh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Dw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Dw&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Uw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fliplr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Uw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can get &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(Dw)
[ 1.02643452  0.99656548]


print(Dw)
[[ 0.06711024 -0.99774557]
 [ 0.99774557  0.06711024]]
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="how-to-write-reduced-rank-lda"&gt;&lt;a name="user-content-how-to-write-reduced-rank-lda" href="#how-to-write-reduced-rank-lda" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;How to Write Reduced Rank LDA&lt;/h2&gt;
&lt;p&gt;Finally, we arrive at the algorithm.&lt;br /&gt;
I mainly reference &lt;a href="http://sites.stat.psu.edu/~jiali/course/stat597e/notes2/lda2.pdf"&gt;http://sites.stat.psu.edu/~jiali/course/stat597e/notes2/lda2.pdf&lt;/a&gt;. &lt;br /&gt;
Which is a very very nice ppt, thanks it very much!  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Find the centroids for all the classes and class prior probabilities, which is the same in LDA (&lt;span class="math"&gt;\(\mu_k\)&lt;/span&gt; and &lt;span class="math"&gt;\(\pi_k\)&lt;/span&gt;).  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find between-class covariance matrix B using the centroid vectors and class prior probabilities&lt;br /&gt;
    suppose &lt;span class="math"&gt;\(\mu_k\)&lt;/span&gt; is column vector&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\mu = \Sigma_1^K \mu_k\)&lt;/span&gt;&lt;br /&gt;
&lt;span class="math"&gt;\(B =  \Sigma_1^K \pi_k(\mu - \mu_k)(\mu - \mu_k)^T\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Notice that the code dosen't take same shape with formula&lt;/strong&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sigma_hat&lt;/span&gt;
&lt;span class="c1"&gt;# prior probabilities (K,1)&lt;/span&gt;
&lt;span class="n"&gt;Pi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pi&lt;/span&gt;
&lt;span class="c1"&gt;# class centroids (K, p)&lt;/span&gt;
&lt;span class="n"&gt;Mu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Mu&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;
&lt;span class="c1"&gt;# the number of class&lt;/span&gt;
&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;
&lt;span class="c1"&gt;# the dimension you want&lt;/span&gt;
&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;

&lt;span class="c1"&gt;# Mu is (K,p) matrix, Pi is (K,1)&lt;/span&gt;
&lt;span class="n"&gt;mu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Pi&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Mu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# vector @ vector equal scalar, use vector[:, None] to transform to matrix&lt;/span&gt;
    &lt;span class="c1"&gt;# vec[:, None] equal to vec.reshape((1, vec.shape[0]))&lt;/span&gt;
    &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Pi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;Mu&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;mu&lt;/span&gt;&lt;span class="p"&gt;)[:,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;Mu&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;mu&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find within-class covariance matrix W, the same with &lt;span class="math"&gt;\(\hat \Sigma\)&lt;/span&gt; in LDA.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;eigen decomposition W&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(W = V_WD_WV_W^T\)&lt;/span&gt;&lt;br /&gt;
Define &lt;span class="math"&gt;\(W^{1/2} = D_W^{1/2}V_W^T\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;So &lt;span class="math"&gt;\(W^{-\frac{1}{2}} = (W^{1/2})^{-1}\)&lt;/span&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Be careful, the `eigh` method get the eigenvalues in ascending , which is opposite to R.&lt;/span&gt;
&lt;span class="n"&gt;Dw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Uw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eigh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# reverse the Dw_ and Uw&lt;/span&gt;
&lt;span class="n"&gt;Dw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Dw&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Uw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fliplr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Uw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;W_half&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linalg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pinv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;diagflat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Dw&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="n"&gt;Uw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;compute &lt;span class="math"&gt;\(B^*\)&lt;/span&gt;&lt;br /&gt;
&lt;span class="math"&gt;\(B^* = (W^{-\frac{1}{2}})^TBW^{-\frac{1}{2}}\)&lt;/span&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;B_star&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;W_half&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="n"&gt;W_half&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;eigen decompostion &lt;span class="math"&gt;\(B^*\)&lt;/span&gt;, get &lt;span class="math"&gt;\(a_l\)&lt;/span&gt;&lt;br /&gt;
&lt;span class="math"&gt;\(B^* = VDV^T\)&lt;/span&gt;&lt;br /&gt;
&lt;span class="math"&gt;\(a_l = W^{-\frac{1}{2}}V_l\)&lt;/span&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;D_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eigh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;B_star&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# reverse V&lt;/span&gt;
&lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fliplr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;W_half&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;transform X and &lt;span class="math"&gt;\(\mu_k\)&lt;/span&gt; and get predict value&lt;br /&gt;
&lt;span class="math"&gt;\(\hat x = Ax\)&lt;/span&gt;&lt;br /&gt;
&lt;span class="math"&gt;\(\hat \mu_k = A\mu_k\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;find &lt;span class="math"&gt;\(argmin_k {|\hat x- \hat\mu|_2^2 - log(\pi_k)}\)&lt;/span&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;X_star&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# mu_s_star shape is (p,)&lt;/span&gt;
    &lt;span class="n"&gt;mu_k_star&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Mu&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;# Ref: http://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.norm.html&lt;/span&gt;
    &lt;span class="c1"&gt;# Ref: http://stackoverflow.com/questions/1401712/how-can-the-euclidean-distance-be-calculated-with-numpy&lt;/span&gt;
    &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;norm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_star&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;mu_k_star&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# Python index start from 0, transform to start with 1&lt;/span&gt;
&lt;span class="n"&gt;y_hat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argmin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="put-it-together"&gt;&lt;a name="user-content-put-it-together" href="#put-it-together" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;Put it Together&lt;/h2&gt;
&lt;p&gt;You can find complete code in here&lt;br /&gt;
&lt;a href="https://github.com/littlezz/ESL-Model/blob/master/esl_model/ch4/model.py"&gt;https://github.com/littlezz/ESL-Model/blob/master/esl_model/ch4/model.py&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="reference"&gt;&lt;a name="user-content-reference" href="#reference" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The Elements of Statistical Learning 2nd Edition section 4.3.2 - 4.3.3  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://sites.stat.psu.edu/~jiali/course/stat597e/notes2/lda2.pdf"&gt;http://sites.stat.psu.edu/~jiali/course/stat597e/notes2/lda2.pdf&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://onlinecourses.science.psu.edu/stat857/node/83"&gt;https://onlinecourses.science.psu.edu/stat857/node/83&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.stat.cmu.edu/~ryantibs/datamining/lectures/21-clas2-marked.pdf"&gt;http://www.stat.cmu.edu/~ryantibs/datamining/lectures/21-clas2-marked.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2016-03-26 15:43:45&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "left",
        indent = "0em",
        linebreak = "false";

    if (true) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="machine learning"></category><category term="机器学习"></category><category term="python"></category><category term="小结"></category><category term="numpy"></category></entry><entry><title>Fuck the Reduced-rank LDA</title><link href="http://littlezz.github.io/fuck-the-reduced-rank-lda.html" rel="alternate"></link><updated>2016-03-25T00:00:00+08:00</updated><author><name>littlezz</name></author><id>tag:littlezz.github.io,2016-03-25:fuck-the-reduced-rank-lda.html</id><summary type="html">&lt;p&gt;从昨天开始一直在弄RRLDA， 直到今天晚上， 无果。&lt;br /&gt;
搜索各种资料， 各自有理， 到最后连计算 &lt;span class="math"&gt;\(W^{-\frac{1}{2}}\)&lt;/span&gt; 都能有不同的版本。  &lt;/p&gt;
&lt;p&gt;权当整理思路吧， 整理一下各种版本（可能我编程有问题， 反正所有版本我都没能算对：）  &lt;/p&gt;
&lt;h2 id="esl"&gt;&lt;a name="user-content-esl" href="#esl" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;版本一： ESL&lt;/h2&gt;
&lt;p&gt;page 114 页的算法。&lt;br /&gt;
我翻译一下：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;计算 类的重心 K x P 的矩阵M， 还有公共协方差矩阵W；&lt;/li&gt;
&lt;li&gt;计算 &lt;span class="math"&gt;\(M^* = MW^{-\frac{1}{2}}\)&lt;/span&gt;, 使用W的特征分解；&lt;/li&gt;
&lt;li&gt;计算&lt;span class="math"&gt;\(B^*\)&lt;/span&gt;, &lt;span class="math"&gt;\(M^*\)&lt;/span&gt;的协方差矩阵（B是为了between-class）, 还有他的特征分解 &lt;span class="math"&gt;\(B^* = V^*D_BV^{*T}\)&lt;/span&gt;. &lt;span class="math"&gt;\(V^*\)&lt;/span&gt;的按顺序的列&lt;span class="math"&gt;\(v_l^*\)&lt;/span&gt;定义了最佳子空间的坐标。  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;卧槽， 我他妈看懂了。&lt;br /&gt;
我往下看了一行。 &lt;br /&gt;
书上的意思是说， 你本来要算这些jb玩意的， 但是后来有一个叫做『捕鱼者（fisher）』的捕鱼达人， 给出了更吊的东西， 卧槽， 我他妈真的咸鱼啊， 这个人一波收割啊卧槽。  &lt;/p&gt;
&lt;p&gt;那我懂了， 我接着看书了。  &lt;/p&gt;
&lt;p&gt;FUCK！&lt;br /&gt;
FUCK ME！&lt;/p&gt;
&lt;p&gt;2016年03月25日00:46:12&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "left",
        indent = "0em",
        linebreak = "false";

    if (true) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="machine learning"></category><category term="机器学习"></category><category term="他妈的"></category><category term="学学学，学个屁"></category></entry><entry><title>Numpy 使用小结</title><link href="http://littlezz.github.io/numpy-shi-yong-xiao-jie.html" rel="alternate"></link><updated>2016-03-26T11:12:24+08:00</updated><author><name>littlezz</name></author><id>tag:littlezz.github.io,2016-03-21:numpy-shi-yong-xiao-jie.html</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/littlezz/ESL-Model"&gt;ESLModel&lt;/a&gt; 开发有一段时间了， 期间和numpy打了非常多的交道， 虐得我死去活来。  &lt;/p&gt;
&lt;p&gt;于是抽空写一下关于numpy的总结吧。  &lt;/p&gt;
&lt;h2 id="intro"&gt;&lt;a name="user-content-intro" href="#intro" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;Intro&lt;/h2&gt;
&lt;p&gt;介绍一些会混淆的东西&lt;/p&gt;
&lt;h3 id="vector-vs-matrix"&gt;&lt;a name="user-content-vector-vs-matrix" href="#vector-vs-matrix" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;vector vs matrix&lt;/h3&gt;
&lt;p&gt;vector是向量， 是一维的。 &lt;br /&gt;
matrix是二维以上的。  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;vec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# method 1&lt;/span&gt;
&lt;span class="n"&gt;mat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;

&lt;span class="c1"&gt;# method 2&lt;/span&gt;
&lt;span class="n"&gt;mat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# mathod 3&lt;/span&gt;
&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# output (3,)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# output (3, 1)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;向量可以点乘矩阵， 反过来也可以， 结果是向量。&lt;/li&gt;
&lt;li&gt;向量可以点乘向量， 得到标量&lt;/li&gt;
&lt;li&gt;向量没有倒置&lt;/li&gt;
&lt;li&gt;矩阵使用下标的时候， 结果是向量， 使用slice 来查询的时候， 得到子矩阵。  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果想要得到  单行的子矩阵  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;mat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# 得到一行， 矩阵&lt;/span&gt;
&lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;:]&lt;/span&gt;

&lt;span class="c1"&gt;# 得到一列， 矩阵&lt;/span&gt;
&lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[:,[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

&lt;span class="c1"&gt;# 得到第二列， 向量&lt;/span&gt;
&lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# 子矩阵&lt;/span&gt;
&lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# 下标查询&lt;/span&gt;
&lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="axis1-vs-axis0"&gt;&lt;a name="user-content-axis1-vs-axis0" href="#axis1-vs-axis0" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;axis=1 vs axis=0&lt;/h3&gt;
&lt;p&gt;之前看官方的文档里面有说， 你要这样记：axis=0 是从上往下， axis=1 是从左往右处理。  &lt;/p&gt;
&lt;p&gt;比如&lt;code&gt;np.sum(mat, axis=0)&lt;/code&gt; 得到每一列从上到下的累加和. &lt;code&gt;axis=1&lt;/code&gt; 的时候得到每一行的累加和.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;m2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="rowvar1"&gt;&lt;a name="user-content-rowvar1" href="#rowvar1" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;rowvar=1&lt;/h4&gt;
&lt;p&gt;在使用&lt;code&gt;np.cov&lt;/code&gt; 的时候，里面有这个参数， 默认是非零， 表示你的矩阵是（p x N）的， 每一行表示变量， 每一列里面存的是样本数据。  如果&lt;code&gt;rowvar=0&lt;/code&gt;, 则表示反过来.  &lt;/p&gt;
&lt;h2 id="tips"&gt;&lt;a name="user-content-tips" href="#tips" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;Tips&lt;/h2&gt;
&lt;h3 id="reshape"&gt;&lt;a name="user-content-reshape" href="#reshape" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;reshape&lt;/h3&gt;
&lt;p&gt;reshape 里面的值设置-1的时候表示自动&lt;/p&gt;
&lt;p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;br /&gt;
会自动变成(3x4)  &lt;/p&gt;
&lt;h3 id="_1"&gt;&lt;a name="user-content-_1" href="#_1" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;如何插入一列&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# 在0的开始插入全为3的列&lt;/span&gt;
&lt;span class="n"&gt;b1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="_2"&gt;&lt;a name="user-content-_2" href="#_2" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;如何把向量转成单列矩阵&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# column matrix&lt;/span&gt;
&lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# row matrix&lt;/span&gt;
&lt;span class="n"&gt;vec&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="a"&gt;&lt;a name="user-content-a" href="#a" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;如何算矩阵的行列式&lt;span class="math"&gt;\(|A|\)&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;用&lt;code&gt;np.linalg.det&lt;/code&gt; 或者 &lt;code&gt;np.linalg.slogdet&lt;/code&gt;&lt;br /&gt;
后者在矩阵里面的值很小的时候使用, 得到的是log后的结果.&lt;/p&gt;
&lt;h3 id="ddof"&gt;&lt;a name="user-content-ddof" href="#ddof" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;ddof&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;np.std&lt;/code&gt;等函数中有&lt;code&gt;ddof&lt;/code&gt;这个参数， 默认为0， 在pandas里面默认为1， 主要用于控制比如计算标准差的时候， 是除以N-1还是除以N， 这里相当于除以（N - ddof）&lt;/p&gt;
&lt;h3 id="svd"&gt;&lt;a name="user-content-svd" href="#svd" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;svd&lt;/h3&gt;
&lt;p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Vt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linalg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;svd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Vt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# output(4, 4) (3,) (3, 3) (4, 3)&lt;/span&gt;

&lt;span class="c1"&gt;# with full_matrices=False&lt;/span&gt;
&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Vt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linalg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;svd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;full_matrices&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Vt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# output (4, 3) (3,) (3, 3) (4, 3)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;br /&gt;
注意到D是向量， Vt是V的转置矩阵。&lt;br /&gt;
多数情况下， 应该是使用full_matrices=False&lt;/p&gt;
&lt;h3 id="_3"&gt;&lt;a name="user-content-_3" href="#_3" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;随机整数矩阵&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 随机生成包含0-9的 4x3 的矩阵&lt;/span&gt;
&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="orthogonal-matrix"&gt;&lt;a name="user-content-orthogonal-matrix" href="#orthogonal-matrix" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;随机生成正交矩阵（orthogonal matrix）&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_orthogonal_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    with random permutation of coordinate axes&lt;/span&gt;
&lt;span class="sd"&gt;    :param N: dimension of matrix&lt;/span&gt;
&lt;span class="sd"&gt;    :return: NxN orthogonal matrix contains 0 and 1&lt;/span&gt;

&lt;span class="sd"&gt;    Ref: http://stackoverflow.com/questions/33003341/how-to-randomly-generate-a-nonnegative-orthogonal-matrix-in-numpy&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eye&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;permutation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="eigen-decomposition"&gt;&lt;a name="user-content-eigen-decomposition" href="#eigen-decomposition" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;特征分解（eigen decomposition）&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;np.eigh&lt;/code&gt; 针对对称的矩阵， &lt;strong&gt;注意， eigenvalues 是升序的，而在R语言里面是降序的！&lt;/strong&gt;&lt;br /&gt;
&lt;code&gt;np.eig&lt;/code&gt; 普通的分解， eigenvalues不保证顺序。  &lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "left",
        indent = "0em",
        linebreak = "false";

    if (true) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="numpy"></category><category term="python"></category><category term="小结"></category></entry><entry><title>Python Package Setup</title><link href="http://littlezz.github.io/python-package-setup.html" rel="alternate"></link><updated>2016-03-17T00:00:00+08:00</updated><author><name>littlezz</name></author><id>tag:littlezz.github.io,2016-03-17:python-package-setup.html</id><summary type="html">&lt;p&gt;esl_model &lt;a href="https://github.com/littlezz/ESL-Model"&gt;https://github.com/littlezz/ESL-Model&lt;/a&gt;&lt;br /&gt;
今天算是弄完了第三章的代码， 放到github上面， 折腾python的打包折腾了大半天。  &lt;/p&gt;
&lt;p&gt;简单总结一下Python的Package Distribution吧。&lt;br /&gt;
有空的话， 在写一个pytest的简单总结。&lt;/p&gt;
&lt;h2 id="setuppy"&gt;&lt;a name="user-content-setuppy" href="#setuppy" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;setup.py&lt;/h2&gt;
&lt;p&gt;setup.py 是最主要的整个配置的文件， &lt;/p&gt;
&lt;p&gt;贴我的setup.py 的代码好了。  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;find_packages&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;README.rst&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;readme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;__import__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;esl_model&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__version__&lt;/span&gt;


&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;esl_model&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Algorithm from The Elements of Statistical Learning book implement by Python code&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;long_description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;readme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;classifiers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="s1"&gt;&amp;#39;Programming Language :: Python :: 3.5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;&amp;#39;Programming Language :: Python :: 3 :: Only&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;&amp;#39;Development Status :: 2 - Pre-Alpha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;&amp;#39;License :: OSI Approved :: MIT License&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://github.com/littlezz/ESL-Model&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;littlezz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;author_email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;zz.at.field@gmail.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;license&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MIT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;find_packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exclude&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tests*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
      &lt;span class="n"&gt;install_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;numpy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;pandas&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;scipy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;sklearn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="n"&gt;tests_require&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pytest&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="n"&gt;include_package_data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;zip_safe&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;逐个解释参数。&lt;br /&gt;
&lt;code&gt;name&lt;/code&gt; 是你要发布的模块的名字, 只能是用小写和下划线.不要和其他的公共的模块名字冲突.  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;version&lt;/code&gt; 是版本号, 诸如 0.0.1 这样.  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;description&lt;/code&gt; 和 &lt;code&gt;long_description&lt;/code&gt;是你这个项目的介绍，用于pipy上面的介绍，注意 long_description 只能使用rst格式， **不支持**markdown。   &lt;/p&gt;
&lt;p&gt;&lt;code&gt;classifiers&lt;/code&gt;是你在pipy上面的分类， 一般在这里要只能你是否支持py2， 或py3， 或者是否有特定的平台限制。&lt;a href="https://pypi.python.org/pypi?%3Aaction=list_classifiers"&gt;所有classifiers 列表&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;packages&lt;/code&gt;, 要包含的代码的文件夹。比如我也可以设置成 &lt;code&gt;esl_model&lt;/code&gt;， 但是据我观察， 这样设置之后， 我下面的子模块是没有办法使用&lt;code&gt;import esl_model.ch3&lt;/code&gt; 这样载入的。&lt;br /&gt;
所以使用find_packages自动寻找所有模块， 特别排除我的测试文件存放的文件夹。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;install_requires&lt;/code&gt;, 依赖， 如果在虚拟环境里面的话可以用&lt;code&gt;pip freeze&lt;/code&gt;来查看安装的库， 但是这里面会包含真正用到的库（比如里面可能会显示ipython）。 可以使用 pipreqs 这个库。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;tests_require&lt;/code&gt; 这个是测试的用的, 在&lt;code&gt;python setup.py test&lt;/code&gt;的时候用到, 然而我偷懒了, pytest在这里还差一步配置， 所以这里有没有都一样。。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;include_package_data&lt;/code&gt;, 这个是包含非python代码的文件， 我的程序里面要使用到csv数据， 所以需要这个选项。  &lt;/p&gt;
&lt;p&gt;我的代码结构树&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;── LICENSE.md
├── MANIFEST.in
├── README.rst
├── esl_model
│   ├── __init__.py
│   ├── __pycache__
│   ├── base.py
│   ├── ch3
│   │   ├── __init__.py
│   │   ├── __pycache__
│   │   └── model.py
│   ├── datasets
│   │   ├── __init__.py
│   │   ├── __pycache__
│   │   ├── base.py
│   │   └── data
│   │       └── prostate.csv
│   └── utils.py
├── pytest.ini
├── setup.py
└── tests
    ├── __init__.py
    ├── __pycache__
    ├── test_ch3.py
    └── utils.py
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="manifestin"&gt;&lt;a name="user-content-manifestin" href="#manifestin" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;MANIFEST.in&lt;/h2&gt;
&lt;p&gt;指定需要包含的非程序文件  &lt;/p&gt;
&lt;p&gt;一般是&lt;code&gt;include README.rst&lt;/code&gt; &lt;br /&gt;
我这里因为有额外的数据， 所以要多一行。  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;include README.rst
recursive-include esl_model/datasets/data *.csv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;recursive-include 必须， 不然数据不包含。  &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;a name="user-content-_1" href="#_1" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;测试安装&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pip install -e .&lt;/code&gt;&lt;br /&gt;
本地的调试安装模式。  &lt;/p&gt;
&lt;h2 id="ref"&gt;&lt;a name="user-content-ref" href="#ref" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;ref&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;sklearn的配置文件 &lt;a href="https://github.com/scikit-learn/scikit-learn"&gt;https://github.com/scikit-learn/scikit-learn&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Python-packaging &lt;a href="https://python-packaging.readthedocs.org/en/latest/testing.html"&gt;https://python-packaging.readthedocs.org/en/latest/testing.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="python"></category><category term="小结"></category></entry><entry><title>阿发狗，少年以及金庸</title><link href="http://littlezz.github.io/a-fa-gou-shao-nian-yi-ji-jin-yong.html" rel="alternate"></link><updated>2016-03-15T00:00:00+08:00</updated><author><name>littlezz</name></author><id>tag:littlezz.github.io,2016-03-15:a-fa-gou-shao-nian-yi-ji-jin-yong.html</id><summary type="html">&lt;p&gt;阿发狗3：0打赢了李世石， 整个世界沉浸在一股人工智能毁灭人类的狂欢中， 之后李世石翻了一盘。 众人笑道：AI已经学会放水啦， 药丸药丸， 真是可怕。  &lt;/p&gt;
&lt;p&gt;时至围棋界被阿发狗颠覆之际， 世界围棋第一人站了出来：就算阿发狗能打败李世石， 也打败不了我！大家定睛一看， 发现围棋第一人是个19岁少年， 于是纷纷以长辈自称， 要教他一下如何做人谦虚的人生道理。  &lt;/p&gt;
&lt;p&gt;围棋大师吴清源的脑残粉金庸同学3月10日九十二岁啦， 大家有什么想对他说的， 截止2016年03月16日00:44:36， 这个问题下面排名第一的答案写了一个小故事， 大意是金庸因为写了一篇暗讽教务主任的文章被其看到后居然就被退学了， 之后金庸都不提这段高中历史， 作者给于这件事情的评价是， 『傲娇』得很的金庸。末尾不忘用一个感叹号来增强语气。  &lt;/p&gt;
&lt;p&gt;我想起了周杰伦在《三年二班》里面唱到那句重复了好多遍的歌词  &lt;/p&gt;
&lt;p&gt;——  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不好笑 不好笑 不好笑 不好笑 不好笑 不好笑 不好笑 不好笑 不好笑 不好笑 不好笑 不好笑 不好笑 不好笑 不好笑 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这三件事情， 一点也不好笑。  &lt;/p&gt;
&lt;p&gt;如果你也曾在出发时志在必得， 结果却被打得落花流水， 咬紧牙关取得一些成绩却于事无补。  &lt;/p&gt;
&lt;p&gt;如果你也曾在同辈愉快玩耍的时候承受超越『年龄段』的磨练， 以此获得相应的能力， 却还是要被年长而无能者打着人生经验丰富的旗号『教育』一番。  &lt;/p&gt;
&lt;p&gt;如果你也曾空怀与学校教学目标不相符的能力， 而濒临退学， 抑或被直接退学。  &lt;/p&gt;
&lt;p&gt;那么， 你就会知道， 一点也不好笑。  &lt;/p&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;三面的三件事， 其实都可以围绕围棋展开， 第一件事李世石困兽之斗， 基本上线上和线下的人都开玩笑说是AI放水， 对之前不可一世的李世石同学的嘲讽程度可见一斑。&lt;br /&gt;
第二件事是19岁少年的『惊人』发言， 于是大家想要教他当大人。&lt;/p&gt;
&lt;p&gt;然而这些举动其实在我们的吴清源大师面前， 其实都是小儿科。&lt;br /&gt;
不过， 大家也不关心吴清源是谁是不是？  &lt;/p&gt;
&lt;p&gt;算了， 本来我还有半肚子的苦水没有得喷出来， 写到这里的时候也没有什么想说的了， 以前老是奇怪， 你说那些动物长得都一样的， 他们怎么分得清楚谁是谁？  &lt;/p&gt;
&lt;p&gt;我们分不清，但是他们分得清啊。 现在想来网络上也是一样的。&lt;br /&gt;
隔着屏幕， 谁知道后面码字的谁是谁， 在这里被恶心完之后， 接着被下一个地方恶心， 我们总用一个『傻x』来标记他们， 结果发现这个世界上怎么这么多『傻x』， 然而仔细一想， 这个词后面是无数的人， 你干掉了一个， 又冒出一个，无穷尽，辩不赢， 赢不长久， 赢了也没用。最后哪怕是呕心沥血的赢了一次，花了时间和精力， 最后得到对面甘拜下风， 低头认输， 五体投地，结果过了不久又冒出一个。  &lt;/p&gt;
&lt;p&gt;所以当我发现我要写一些幼稚得不行的所谓的人生道理的时候， 我及时的把自己打住了。  &lt;/p&gt;
&lt;p&gt;有非常多的话要说， 但是在写作的时候， 我已经在自己的内心里面说了一遍， 这就够了。  &lt;/p&gt;
&lt;p&gt;如果有过一些相似的经历， 那么有些话是不必多说的， 如果没有过切身体会， 那么又何必多说？  &lt;/p&gt;
&lt;p&gt;2016年03月16日01:58:35  &lt;/p&gt;</summary><category term="瞎扯"></category><category term="日记"></category></entry><entry><title>Linear Model的总结</title><link href="http://littlezz.github.io/linear-modelde-zong-jie.html" rel="alternate"></link><updated>2016-03-10T00:00:00+08:00</updated><author><name>littlezz</name></author><id>tag:littlezz.github.io,2016-03-10:linear-modelde-zong-jie.html</id><summary type="html">&lt;h2 id="_1"&gt;&lt;a name="user-content-_1" href="#_1" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;公式&lt;/li&gt;
&lt;li&gt;易混淆的名词解释&lt;/li&gt;
&lt;li&gt;蛋疼的程序编写过程  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;&lt;a name="user-content-_2" href="#_2" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;公式&lt;/h3&gt;
&lt;p&gt;The elements of statistical learning 看到了第三章， 昨天着手于编写程序。  &lt;/p&gt;
&lt;p&gt;Linear Model: &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\hat\beta = (\mathbf X^T \mathbf X)^{-1} \mathbf X^T \mathbf y\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在这里面， &lt;span class="math"&gt;\(\mathbf X\)&lt;/span&gt; 先要要standardization, 然后在第一列插入全为1的列， 用于截距计算(intercept)。&lt;br /&gt;
所以beta hat 算出来后第一项为截距。  &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\hat {\mathbf y} = \mathbf X \hat \beta\)&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;对数据做预测的时候， &lt;strong&gt;X也要standardization&lt;/strong&gt;， 做和你之前一样的事情， 使用和**train set一样的 mean 和 std**， 说多了都是泪啊， 我昨天晚上一个晚上都在弄这个， 因为我的要预测的x用了自己的mean 和std， 结果出来的结果不一样。  一定要使用相同的std 和mean 来处理数据。 我才想起来ng的课里面写程序的时候， pdf里面还特别提示过， 妈的， 哭晕。  &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(var(\hat\beta)=(\mathbf X^T \mathbf X)^{-1}\sigma^2\)&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\hat \sigma = \frac{1}{N-p-1} \sum_{i=1}^N(y_i - \hat y_i)^2\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然后是z-score&lt;br /&gt;
&lt;span class="math"&gt;\(z_j = \frac{\hat\beta_j}{\hat \sigma \sqrt v_j}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;注意到&lt;span class="math"&gt;\(v_j\)&lt;/span&gt;是&lt;span class="math"&gt;\(\mathbf X^T \mathbf X\)&lt;/span&gt;的对角线上的第j项。&lt;br /&gt;
所以得到stand error这里的做法是对&lt;span class="math"&gt;\(var(\hat\beta)\)&lt;/span&gt;对角线开平方。&lt;/p&gt;
&lt;p&gt;F statistic  &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(F = \frac{(RSS_0 - RSS_1)/(p_1 - p_0)}{RSS1 / (N - p_1 - 1)}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;F statistic 用于分析去掉一些feature之后影响大不大。&lt;br /&gt;
&lt;span class="math"&gt;\(RSS_1\)&lt;/span&gt; 是含有跟多feature的模型的代价， &lt;span class="math"&gt;\(RSS_0\)&lt;/span&gt;是去掉一些feature之后的模型的代价。  &lt;/p&gt;
&lt;h3 id="_3"&gt;&lt;a name="user-content-_3" href="#_3" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;易混淆的名词解释&lt;/h3&gt;
&lt;h5 id="standardization"&gt;&lt;a name="user-content-standardization" href="#standardization" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;standardization&lt;/h5&gt;
&lt;p&gt;这个的意识是让数据的feature 的平均值为0, 然后高斯分布为1.  &lt;/p&gt;
&lt;p&gt;针对的是每一个feature, 一般是&lt;code&gt;x = (x-x.mean(axis=0)) / x.std(asix=0, ddof=1)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;默认ddof=0， 这个时候标准差（std） 是除以N的， 在机器学习里面， 一般是除以N， 但是在这本书里面， 一般是认为std的计算要除以（N-1）。  &lt;/p&gt;
&lt;h5 id="normalize"&gt;&lt;a name="user-content-normalize" href="#normalize" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;normalize&lt;/h5&gt;
&lt;p&gt;这个是针对每一个样例的， 比如X里面包含N组数据， 那么就是对N组数据做， 一般是把不同特征的取值范围降到同一个范围里面。  &lt;/p&gt;
&lt;h3 id="_4"&gt;&lt;a name="user-content-_4" href="#_4" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;蛋疼的程序编写过程&lt;/h3&gt;
&lt;p&gt;我花了一天， 才发现， standardization对结果是不会影响的， 是一种优化方法。&lt;br /&gt;
但是我因为对 Test_X 的数据standardization错了, 所以结果总是不一样. 非常的尴尬.  &lt;/p&gt;
&lt;p&gt;翻了sklearn的源码, 发现他里面怎么对y做了处理, 做了&lt;code&gt;(y-y.mean())&lt;/code&gt;东西， 卧槽， 不合理啊。  &lt;/p&gt;
&lt;p&gt;昨天写了一天， 值写了linear Regression， 后面还有一堆， 慢慢写吧。  &lt;/p&gt;
&lt;p&gt;等稳定一些之后再放到github上面好了。  &lt;/p&gt;
&lt;p&gt;2016年03月10日15:12:10&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "left",
        indent = "0em",
        linebreak = "false";

    if (true) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="机器学习"></category></entry><entry><title>概率论学习</title><link href="http://littlezz.github.io/gai-lu-lun-xue-xi.html" rel="alternate"></link><updated>2016-01-29T00:00:00+08:00</updated><author><name>littlezz</name></author><id>tag:littlezz.github.io,2016-01-29:gai-lu-lun-xue-xi.html</id><summary type="html">&lt;p&gt;所用公式都是用mathjax 写的， ( &lt;del&gt;奶奶的， 写死我了。&lt;/del&gt; )  &lt;/p&gt;
&lt;h2 id="_1"&gt;&lt;a name="user-content-_1" href="#_1" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;基本概念&lt;/h2&gt;
&lt;p&gt;基本概念主要记下常用公式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;P(A) 表示事件A发生的概率  &lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(P(A \bigcup B) = P(A) + P(B) - P(AB)\)&lt;/span&gt;  &lt;/li&gt;
&lt;li&gt;上面公式可以推广到N个事件  &lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(P(B \mid A)  = \frac{P(AB)}{P(A)}\)&lt;/span&gt;  &lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(P(A) = P(AB)+P(A \bar B) = P(B) \cdot P(A|B) + P(\bar B) \cdot P(A| \bar B)\)&lt;/span&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="_2"&gt;&lt;a name="user-content-_2" href="#_2" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;全概率公式&lt;/h5&gt;
&lt;p&gt;&lt;span class="math"&gt;\(B_i\)&lt;/span&gt; 是&lt;span class="math"&gt;\(S\)&lt;/span&gt;的完备事件组  &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(P(A) = \sum_{i=1}^n P(B_i)P(A|B_i)\)&lt;/span&gt;   &lt;/p&gt;
&lt;h5 id="_3"&gt;&lt;a name="user-content-_3" href="#_3" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;贝叶斯公式&lt;/h5&gt;
&lt;p&gt;&lt;span class="math"&gt;\(P(B_k|A) = {P(B_k A) \over P(A)} = {P(B_k)P(A|P(B_k) \over \sum_{j=1}^n P(B_j)P(A|B_j)}\)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id="_4"&gt;&lt;a name="user-content-_4" href="#_4" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;概率分布&lt;/h2&gt;
&lt;h4 id="0-1"&gt;&lt;a name="user-content-0-1" href="#0-1" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;0-1分布&lt;/h4&gt;
&lt;p&gt;&lt;span class="math"&gt;\(X \sim 0 - 1\)&lt;/span&gt;  &lt;/p&gt;
&lt;h4 id="_5"&gt;&lt;a name="user-content-_5" href="#_5" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;二项分布&lt;/h4&gt;
&lt;p&gt;&lt;span class="math"&gt;\(P\{X= k\} = C_n^kp^k(1-p)^k\)&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;记作 &lt;span class="math"&gt;\(X \sim B(n,p)\)&lt;/span&gt;&lt;/p&gt;
&lt;h4 id="poisson"&gt;&lt;a name="user-content-poisson" href="#poisson" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;poisson分布&lt;/h4&gt;
&lt;p&gt;&lt;span class="math"&gt;\(P\{X= k\} = {e^{-\lambda}\lambda^k \over k!}\)&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;记作 &lt;span class="math"&gt;\(X \sim \pi(\lambda)\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id="distribution-function"&gt;&lt;a name="user-content-distribution-function" href="#distribution-function" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;Distribution function&lt;/h3&gt;
&lt;p&gt;&lt;span class="math"&gt;\(F(x) = P\{X \le x\}\)&lt;/span&gt;  &lt;/p&gt;
&lt;h3 id="probability-density-function"&gt;&lt;a name="user-content-probability-density-function" href="#probability-density-function" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;probability density function&lt;/h3&gt;
&lt;p&gt;&lt;span class="math"&gt;\(f(x)\)&lt;/span&gt; 是概率密度函数&lt;br /&gt;
满足  &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(P\{X \in D\} = \int_{D} f(x) {dx}\)&lt;/span&gt;  &lt;/p&gt;
&lt;h3 id="_6"&gt;&lt;a name="user-content-_6" href="#_6" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;分布&lt;/h3&gt;
&lt;h4 id="_7"&gt;&lt;a name="user-content-_7" href="#_7" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;均匀分布&lt;/h4&gt;
&lt;p&gt;f(x) = 1/(b-a),  x在（a,b)内， 其他的地方为0  &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(X \sim U(a,b)\)&lt;/span&gt;  &lt;/p&gt;
&lt;h4 id="normal"&gt;&lt;a name="user-content-normal" href="#normal" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;正态分布 （normal）&lt;/h4&gt;
&lt;p&gt;&lt;span class="math"&gt;\(X \sim N(\mu, \sigma^2)\)&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;性质&lt;br /&gt;
- f(x) 关于 &lt;span class="math"&gt;\(x=\mu\)&lt;/span&gt; 对称&lt;br /&gt;
- &lt;span class="math"&gt;\(\sigma\)&lt;/span&gt;越大, 最大值越大, 就是越瘦高.  &lt;br /&gt;
- N(0, 1) 是标准正态分布  &lt;/p&gt;
&lt;h4 id="_8"&gt;&lt;a name="user-content-_8" href="#_8" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;指数分布&lt;/h4&gt;
&lt;p&gt;&lt;span class="math"&gt;\(f(x) = \lambda e^{-\lambda x}\)&lt;/span&gt;, x&amp;gt;0  &lt;/p&gt;
&lt;p&gt;记作&lt;span class="math"&gt;\(X \sim E(\lambda)\)&lt;/span&gt;&lt;/p&gt;
&lt;h4 id="others"&gt;&lt;a name="user-content-others" href="#others" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;others&lt;/h4&gt;
&lt;p&gt;比如 Gamma分布， &lt;br /&gt;
&lt;span class="math"&gt;\(X \sim \Gamma(\alpha, \beta)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Beta 分布&lt;br /&gt;
&lt;span class="math"&gt;\(X \sim \beta(a, b)\)&lt;/span&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "left",
        indent = "0em",
        linebreak = "false";

    if (true) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary></entry><entry><title>药丸， 真的是药丸</title><link href="http://littlezz.github.io/yao-wan-zhen-de-shi-yao-wan.html" rel="alternate"></link><updated>2016-01-27T00:00:00+08:00</updated><author><name>littlezz</name></author><id>tag:littlezz.github.io,2016-01-27:yao-wan-zhen-de-shi-yao-wan.html</id><summary type="html">&lt;p&gt;今天浪了一天， 不懂在干什么， 本来说要补一波概率论的， 结果看到第4章之后就开始乱翻书了， 然后统计学习基础那本书根本就没有看， 昨天看到『前列腺癌』的例子， 今天还是这个例子。 我很关心男性前列腺癌嘛啊？  &lt;/p&gt;
&lt;p&gt;感觉真的药丸。  &lt;/p&gt;
&lt;p&gt;昨天和手榴弹去吃KFC， 作死的点了一个全家桶， 嘛， 作为肥宅， kfc当然要刷全家桶啦。  &lt;/p&gt;
&lt;p&gt;结果就是吃得快吐了， 肥宅力不足嘛。&lt;br /&gt;
人家A岛上的肥宅都是单刷全家桶， 结果我们两个人也搞不完一个， 主要是汉堡， 简直是想象不出的难吃， 等吃到汉堡的时候， 进入嘴巴的东西基本已经没有什么味道了， 可是汉堡的那个面包， 用蛋蛋的话来说叫做『面饼』， （里面夹着的东西叫做『肉饼』）， 真是难吃， 难吃， 难吃。  &lt;/p&gt;
&lt;p&gt;我偷偷留了两口没有吃完， 藏在汉堡盒子里面， 结果在战斗结束拍纪念照的时候被我弄了出来， 蛋蛋惊呼：『卧槽， 你作弊！居然还藏了半个面饼！』  &lt;/p&gt;
&lt;p&gt;纪念照是以冷漠的肥宅为主题， 通过拍摄在成堆的K记包装盒于凌乱的可乐杯后面低头玩手机的男人， 表现肥宅刷完全家桶事后玩手机的冷漠之情。  &lt;/p&gt;
&lt;p&gt;&lt;img alt="肥宅" src="../images/IMG_0593.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;饭后， 天早已经全黑，走在回去的路上， 我早已直不起腰， 就算是还剩10秒的绿灯也只能放弃， 停下来等待。  &lt;/p&gt;
&lt;p&gt;世界一下子陷入了缓慢的行动之中。  在这样的节奏之中， 却还是能够超过那些男女成群嘻嘻哈哈的路人，  &lt;/p&gt;
&lt;p&gt;在一个十字路口之前， 蛋蛋提到了毕业， 我连能不能毕业都不知道， 这学期估计要吃退学警告咯， 我哈哈的回应道。  &lt;/p&gt;
&lt;p&gt;蛋蛋自己也挂了两科， 而且是考试全部都会， 但是因为没有平时分， 结果就被老师给挂了。  &lt;/p&gt;
&lt;p&gt;操， 大不了就延毕呗。  &lt;/p&gt;
&lt;p&gt;不知道为何这句压在我心口的话语经他之口说出来之后， 我一下子轻松了非常多。 &lt;/p&gt;
&lt;p&gt;人流在十字路口前面聚集， 在红绿灯的结束时间通过是基本规则， 没有人在乎你是不是撑得快死了。  &lt;/p&gt;
&lt;p&gt;在下一个红绿灯再过马路有什么问题？&lt;br /&gt;
如果不过红绿灯会怎么样？  &lt;/p&gt;
&lt;p&gt;我不知道到。  &lt;/p&gt;
&lt;p&gt;他们说， 山崩地裂， 日月无光。&lt;br /&gt;
他们说， 你本来有一个美好的前途。&lt;br /&gt;
他们说， 你完蛋定了啊。  &lt;/p&gt;
&lt;p&gt;说完这些之后， 继续投身于和小贩对青菜能不能少一毛钱的战斗之中。  &lt;/p&gt;
&lt;p&gt;我看着远处的猪肉摊， 肉头堆积成山， 屠户把猪头奋力的塞进黑色的袋子里面， 对太大的头， 用刀切成两半， 手起刀落， 骨肉四溅。 &lt;/p&gt;
&lt;p&gt;在那一刻， 他是否有感受到， 大千世界曾由他主宰的快感？  &lt;/p&gt;
&lt;p&gt;在那一刻， 他们是不是也因此产生了参透世界，看破轮回的感觉， 于是有了对他人做出预言的底气。  &lt;/p&gt;
&lt;p&gt;我不知道如何回应， 我也不知道路的那头有什么， 途中会有弹射起步的跑车路过么？ 会中出一架大卡车么？  &lt;/p&gt;
&lt;p&gt;这个学期， 加入的公司没有融到钱， 团队解散了， 但是我好歹也达成了筹够去日本剁手的钱的目的。   &lt;/p&gt;
&lt;p&gt;干了一个学期， 目的是达成了， 自己也开始有了新的作死计划， 开始看起了机器学习， 两年前， 我还在嚷嚷着， 写程序要什么数学？&lt;br /&gt;
两年后， 我看着那些书中中出的各种的公式， 简直就像是被中出一样。  &lt;/p&gt;
&lt;p&gt;摸摸自己的额头， 擦了把汗， 我果然还是想要试一下啊。&lt;br /&gt;
于是Ng的课算是上完了， 你要问我记住了什么， 说一句实话， 对不起，什么也没有记住。  &lt;/p&gt;
&lt;p&gt;毕不了业， 药丸， 毕得了业， 之后等着的也是找工作， 下一个十字路口，药丸。 找到了工作， 浑水摸鱼， 虚度光阴， 药丸。  摸滚打爬， 事业有成， 娶不到老婆， 药丸。  取到了老婆， 以前吃的化学添加剂太多， 生不出小孩， 药丸。  小孩成绩不好， 药丸。&lt;br /&gt;
事业有成， 取了老婆， 生了小孩， 头发掉光了， 药丸。&lt;br /&gt;
腰酸背痛， 药丸。&lt;br /&gt;
前列腺炎， 药丸。&lt;br /&gt;
老眼昏花， 药丸。&lt;br /&gt;
年事已高， 大小便失禁， 卧床不起， 病房外的小孩因为一个发烧感冒要打针吃药就大喊大叫的， 看着自己浑身插满的管子， &lt;br /&gt;
这一次没有人说你药丸了。  &lt;/p&gt;
&lt;p&gt;但是你我都知道，这下是真的要完了。  &lt;/p&gt;
&lt;p&gt;弗洛伊德分析法， 我们总是药丸。&lt;br /&gt;
不管做什么， 只要『他们』想， 你都是药丸。  &lt;/p&gt;
&lt;p&gt;和蛋蛋在十字路口道别， 我转身没入小区的夜色之中， 在回去的路上， 我已经放弃思考『为什么 &lt;strong&gt;他们&lt;/strong&gt; 总是赢？』这样无解的问题了。   &lt;br /&gt;
蛋蛋说， 赶紧回去， 我要去杀僵尸了， 一斧子砍爆僵尸的头。 特别爽。 &lt;br /&gt;
我也赶着回去捞新船。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;让一让, 母牛们, 人生短暂啊!  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当他的奶牛们疯狂繁殖， 每天开着宴会， 结果吃得差点撑死。&lt;br /&gt;
当他真的需要钱给女儿上学的时候， 奶牛却不在繁殖， 失去了上帝眷顾的又老又聋的他和情人挨家挨户的卖自己徒手制作的小彩票。  最后病死。&lt;/p&gt;
&lt;p&gt;随着年龄的增长和阅历的增加， 我越来越觉得这个世界的疯狂程度，有过之而无不及。  &lt;/p&gt;
&lt;p&gt;教授问我， 啊？你怎么现在就出去工作了？ 我干笑。&lt;br /&gt;
公司的运营总监问我， 你还没有毕业啊？你的工作就是给CTO打杂的么？  我笑笑。  &lt;/p&gt;
&lt;p&gt;面对『他们』发出的这种疑问， 这种暴露自己早已没有任何想象力的疑问， 以及发生的很多事情， 挂科也好， 作为差生中的差生也好， 其实我他妈是不服的。&lt;br /&gt;
我没有那种生来就上天入地扭曲现实的能力，但是却也不认为是被上帝抛弃的人，    &lt;/p&gt;
&lt;p&gt;或许， 这就是普通吧。  &lt;/p&gt;
&lt;p&gt;普通的焦虑着。  &lt;br /&gt;
普通的痛苦着。 &lt;br /&gt;
普通的挣扎着。  &lt;/p&gt;
&lt;p&gt;正因为普通， 所以为了不沦落成『他们』， 不得不经历不普通的事情， 为了在以后， 能遇上和自己一样挣扎的普通人。  &lt;/p&gt;
&lt;p&gt;说说那天接下来的事情吧， 之后我回家就接着玩船去了， 吃得撑了，加上玩了3个小时， 而且有差不多一个小时都在刷同一个图（1-5），精神已经恍惚了， 结果大破进击了。  &lt;/p&gt;
&lt;p&gt;我之前有一点犹豫， 迷迷糊糊的，不确定到底有没有大破， 当选完阵型， 看到我大破的小学生的时候， 我整个人一下就蒙蔽了， 吓出了一身冷汗， 『卧槽， 我要粪提了』， 赶紧F5， 重进游戏之后看到自己的小学生还在。 松了一口气， 事后大佬告诉我在选阵型之前F5才有效， 这次存粹是运气好吧了。  &lt;/p&gt;
&lt;p&gt;差点药丸， 运气好而已， 但是如果真的沉船了， 可能我也会和基友倾诉一下， 药丸药丸，然后接着玩下去。  &lt;/p&gt;
&lt;p&gt;药丸。&lt;br /&gt;
药丸。  &lt;/p&gt;
&lt;p&gt;虽然各种药丸， 一不小心就药丸。但是还是得走下去， 因为，   &lt;/p&gt;
&lt;p&gt;当我们大喊着药丸的时候，你我都知道， 这还不是真正的 &lt;strong&gt;要完&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;2016年01月28日03:32:37&lt;/p&gt;</summary><category term="里人格"></category><category term="日记"></category><category term="瞎扯"></category></entry><entry><title>Ng Machine Learning Week 11</title><link href="http://littlezz.github.io/ng-machine-learning-week-11.html" rel="alternate"></link><updated>2016-01-24T20:04:20+08:00</updated><author><name>littlezz</name></author><id>tag:littlezz.github.io,2016-01-24:ng-machine-learning-week-11.html</id><summary type="html">&lt;p&gt;第十一周说的是处理图片， 介绍了滑动窗口， 如何获得（制造）更多的数据， 还有在pipeline 中的上限分析， 这个是用来决定在系统中应该跟加关心那些模块的优化， 哪些模块就算优化了效果也比较小。  当然了， 喜闻乐见的黑了一下『我认识的人』， 花了18个月去优化一个没有太大效果的模块。  &lt;/p&gt;
&lt;h4 id="_1"&gt;&lt;a name="user-content-_1" href="#_1" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;滑动窗口&lt;/h4&gt;
&lt;p&gt;图片处理的时候是训练识别一小块， 然后滑动窗口来在大图中寻找是否找到。 比如你的样本都是 10x10 的大小， 然后等比例缩放， 在原图中你也可以找 50x50 的, 但是对于这个范围， 你得缩小到10x10， 然后在来识别。  &lt;/p&gt;
&lt;h4 id="_2"&gt;&lt;a name="user-content-_2" href="#_2" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;展开&lt;/h4&gt;
&lt;p&gt;里面还顺带提及了， 什么展开（好吧我不记得具体的名字了）， 在识别图像里面的文字的时候， 首先要找到包含文字的区域， 比如标记为白色， 然后这些白色向周围扩散， 比如20个像素点， 如果这之中也有其他的文字区域（即白色）， 着把他们连成一块大的白色区域。&lt;/p&gt;
&lt;h4 id="_3"&gt;&lt;a name="user-content-_3" href="#_3" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;制造数据&lt;/h4&gt;
&lt;p&gt;用现有样本， 加上噪声之类的， 得到新的训练数据。&lt;br /&gt;
他建议在解决问题前， 先算一下如果我要得到10倍的训练数据， 我需要多大的代价， 比如人工10秒做一次判断， 那么如果我有新的10k条数据， 可能就是人工工作几天， 但是我得到了更加多的数据， 也就是说， 我的训练结果得到了一个巨大的提升。   &lt;/p&gt;
&lt;h4 id="_4"&gt;&lt;a name="user-content-_4" href="#_4" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;上限分析&lt;/h4&gt;
&lt;p&gt;先要模块化， 然后重头开始给于一个模块绝对正确的预测结果给下一个模块， 计算其中系统正确率的变化。  &lt;/p&gt;
&lt;p&gt;然后就可以明确的知道哪些模块不需要花精力啦（&lt;del&gt;前提是你得弄成pipeline， 一般自己写的话都是大杂烩吧&lt;/del&gt;）&lt;/p&gt;
&lt;p&gt;同时不忘黑那个18个月的哥们，&lt;del&gt;这家伙我好想在第一周的时候感觉就听说过他了&lt;/del&gt;。&lt;/p&gt;
&lt;h4 id="_5"&gt;&lt;a name="user-content-_5" href="#_5" class="headeranchor-link" aria-hidden="true"&gt;&lt;span class="headeranchor"&gt;&lt;/span&gt;&lt;/a&gt;终结&lt;/h4&gt;
&lt;p&gt;最后的最后， Andrew 结束词的时候， 我非常的感动（才没有哭！）， 这是我大学之后， 上过的第一门真正体现『传道， 授业， 解惑』的课。&lt;del&gt;（大学上的那个不叫课， 叫吃屎）&lt;/del&gt; &lt;/p&gt;
&lt;p&gt;我还记得第三周的时候， 介绍各种优化， 他坦然的承认自己搞了10年对于这些优化也是最近才渐渐明白里面的原理， 我隔着屏幕， 跨越时空， 哈哈哈的笑着。  &lt;/p&gt;
&lt;p&gt;我还记得， 当我们上完线性回归和logic回归的时候， 他说， 你们现在已经比大多数硅谷工作的工程师更加懂机器学习了， 他们中有很多人靠机器学习赚到了许多钱， 或者帮助公司取得成功。 然后露出一个诙谐的笑容时候， 我也跟着笑着， 这家伙， 整天黑硅谷的人。  &lt;/p&gt;
&lt;p&gt;我还记得当他鼓励完我们， 接着告诉我们， 他还有更厉害的东西要教授我们的时候， 我真的觉得接下来要得到巨大力量， 倍感兴奋。 &lt;/p&gt;
&lt;p&gt;就在最后， 他说， 同学们， 谢谢你们， 我知道你们当中很多人花了大量的时间的来学习， 同时花了大量的时间做哪些长度很长的编程题目，希望你们能在自己的领域利用机器学习取得成功， 希望你们能够让更多的人生活得更美好的时候。  &lt;/p&gt;
&lt;p&gt;我觉得这个祝福一点也不畸形， 我觉得他有资格对他的学生们说希望你们改变世界， 当他说出这句话的时候， 我没有丝毫的觉得矫揉造作， 而是觉得， 理应如此。&lt;/p&gt;
&lt;p&gt;因为，&lt;br /&gt;
师者，传道授业解惑者也。  &lt;/p&gt;
&lt;p&gt;我知道我已经严重偏题了， 这些东西都应该归类到个人日记那一块， 而且我也知道反正也没有人看，但是我还是想在一个属于『公开』的地方， 写下此时此刻的想法。  &lt;/p&gt;
&lt;p&gt;我觉得人的能力真的不是最重要的， 最重要的是他对这个世界， 对其他的人，对周边的事物还存有的一份爱意， 还相信自己在任何情况下都存在着可能性。&lt;br /&gt;
这些才是最重要的， 那些所谓的能力， 终究是科学训练的产物， 这个世界对于我们真正的考验， 是科学之外的东西。  &lt;/p&gt;
&lt;p&gt;所以， 爱因斯坦说， &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个人在智力上的成就很大程度上取决于人格的伟大，这一点往往超出人们通常的认识。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因为，我们还有很长的路要走。&lt;/p&gt;
&lt;p&gt;以上。  &lt;/p&gt;
&lt;p&gt;2016年01月24日21:29:36&lt;/p&gt;</summary><category term="机器学习"></category><category term="瞎扯"></category></entry><entry><title>Ng Machine Learning Week 10</title><link href="http://littlezz.github.io/ng-machine-learning-week-10.html" rel="alternate"></link><updated>2016-01-24T14:49:33+08:00</updated><author><name>littlezz</name></author><id>tag:littlezz.github.io,2016-01-24:ng-machine-learning-week-10.html</id><summary type="html">&lt;p&gt;总结一下第10周， 之前看的都没有总结（←懒   &lt;/p&gt;
&lt;p&gt;第十周已经开始不怎么说算法了， 这次说的是对于大数据集的处理， 之前那种每次都对所有数据集做计算的称为batch， 现在这个（stochastic）是每次只对一个样例找最优值， 遍历完所有样例之后也会趋向于全局最优， 会在他的旁边震荡， 这个时候可以动态的减少学习效率 (alpha)   &lt;/p&gt;
&lt;p&gt;之后说了mini-batch， 就是stochastic 和batch的混合版， 每次只训练一小部分样例。&lt;/p&gt;
&lt;p&gt;然后在线的学习其实感觉就是stochastic， 每次都对一个新的样本训练， 然后丢弃。  &lt;/p&gt;
&lt;p&gt;之后是map reduce， 这个没有什么好说的了， 分布式计算， 或者并行的多核计算， 分布式要考虑网络带宽等问题， 虽然视频说多核的不用考虑带宽， 但是实际上核心之间的通信也要消耗时间， 最终可能每个核心只能快80%吧。  &lt;/p&gt;
&lt;p&gt;map reduce的使用需要计算的时候数据能够分割， 一般是有 Σ 这种求和公式的时候使用。  &lt;/p&gt;
&lt;p&gt;嘛。  &lt;/p&gt;
&lt;p&gt;2016年01月24日14:42:29&lt;/p&gt;</summary><category term="机器学习"></category></entry><entry><title>ML-ex8</title><link href="http://littlezz.github.io/ml-ex8.html" rel="alternate"></link><updated>2016-01-24T00:00:00+08:00</updated><author><name>littlezz</name></author><id>tag:littlezz.github.io,2016-01-24:ml-ex8.html</id><summary type="html">&lt;p&gt;今天撸了Ng的机器学习的第九周的作业。 课之前看了， 作业拖到我学校的考试周结束了才做。 诶一提起这个就想到我挂科估计要挂到退学警告了。。。  &lt;/p&gt;
&lt;p&gt;这一周的是关于异常检查和推荐系统的， 协同过滤我之前看过诶， 和这个不一样， Ng还是求那个gradient 什么鬼的， 可是我在另一篇&lt;a href="http://www.salemmarafi.com/code/collaborative-filtering-with-python/"&gt;文章&lt;/a&gt;里面看到的是另一个东西。&lt;/p&gt;
&lt;p&gt;他也是用movie作为行， 用户作为列， 而且是用户直接当做了feature， 然后算两个movie之间的距离， 不过这样说来， 好像和机器学习就没有关系了。。。  &lt;/p&gt;
&lt;p&gt;另外， 每次做作业的感觉其实就是， 我不会机器学习， 我只是公式的搬运工....  T_T  &lt;/p&gt;
&lt;p&gt;说一下搬运工的心得吧。&lt;br /&gt;
今天把公式转换成矩阵的向量运算的时候折腾了好久。  &lt;/p&gt;
&lt;p&gt;后来我还是没有发现什么取巧的办法， google了一下也没有找到好的技巧（←其实就找了一下）， 总结起来， 还是pdf里面说的  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先用for 循环&lt;/li&gt;
&lt;li&gt;2维的可以直接matrix&lt;/li&gt;
&lt;li&gt;3维带一个for loop&lt;/li&gt;
&lt;li&gt;&lt;del&gt;一般矩阵相乘形式上正确结果就是正确的&lt;/del&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实我花了半个小时在想如何消除3层嵌套的for循环。  /(ㄒoㄒ)/~~  &lt;/p&gt;
&lt;p&gt;嘛， 接着看吧。（&lt;del&gt;弱逼不敢乱说话&lt;/del&gt;）  &lt;/p&gt;
&lt;p&gt;2016年01月24日00:57:49&lt;/p&gt;</summary><category term="机器学习"></category></entry><entry><title>喂喂，有人在吗？</title><link href="http://littlezz.github.io/wei-wei-you-ren-zai-ma.html" rel="alternate"></link><updated>2016-01-22T00:00:00+08:00</updated><author><name>littlezz</name></author><id>tag:littlezz.github.io,2016-01-22:wei-wei-you-ren-zai-ma.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="../images/39556174.jpg" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;在一年前就想弄一个记录一些东西的地方了， 经历了使用django的cms（最后作罢）， 自己写一个博客网站（前端太丑， 作罢）， 到现在用静态的博客系统， 当然， 这个也曾因为一度没有办法选择使用什么主题而作罢。  &lt;/p&gt;
&lt;p&gt;直到最近， 硬着头皮， 一方面看完了所有的pelican的主题， 一方面告诫自己不要折腾， 最后选择了这个主题， 还算满意， 之后配置起来又是一顿折腾， 这里按下不表。  &lt;/p&gt;
&lt;p&gt;所以时至今日， 我也没有觉得自己能够『分分钟』写一个xx出来， 在遇到和漂亮或者所谓的审美有关的东西的时候， 我就立马进入无法选择的地步， 至于前面说的我自己写的博客系统， 大抵在『分页应该使用什么样式』这个问题上搁浅了。  &lt;/p&gt;
&lt;p&gt;于是我也时常在想， 我是不是不太适合和所谓的『美』有关。 我会基础的前端， 摁着我的头写我也写得出， bootstrap全世界样式基本一样， 也不能说丑， 但是没有『灵性』。 我见过有灵性的选手， 每次我不会写前端就问他， 然后他就一次次的证明， 我和他所接触的前端， 不是一个东西。  他总是能使用一种我闻所未闻的姿势， 来解决一个问题。 （当然也是我前端看得少）&lt;/p&gt;
&lt;p&gt;我也去搞过图形化， python的tk， 丑哭， python的kivy， 不稳定， ios的开发， 好像看了官网的第一个部分后来就不看了。  &lt;/p&gt;
&lt;p&gt;果然啊转了一圈， 还是命令行的进度条最他妈的性感了！  &lt;/p&gt;
&lt;p&gt;&lt;del&gt;香菜的笑容就由我来守护， 诸君， 亮剑吧！&lt;/del&gt;  &lt;/p&gt;
&lt;p&gt;扯远了， 我真正想要说的是， 我终于找到了一个地方， 描述自己的想法， 确切的记录自己半途而废而又不以之为耻的心情。  &lt;/p&gt;
&lt;p&gt;真他妈好。  &lt;/p&gt;
&lt;p&gt;2016年01月22日01:23:20&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;（图片p站id=39556174&lt;/p&gt;</summary><category term="瞎扯"></category><category term="日记"></category></entry></feed>